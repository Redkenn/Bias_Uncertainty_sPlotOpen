library(sf)
library(rnaturalearth)
library(tidyverse)
library(raster)
library(rgdal)
library(mgcv)

NNI.NNI_SES <- readRDS("NNI.NNI_SES.rds")

nNat2 <- readRDS("nNat2.rds")
nNat <- nNat2@data %>%  dplyr::select(id, countIN)%>% unique()

d <- readRDS("d.rds")
nPlot <- d %>% dplyr::select(id, PlotObservationID)%>% unique()%>% group_by(id) %>%
  mutate(nPlot = n()) %>%
  ungroup() %>% dplyr::select(id, nPlot)%>% unique()




x <- raster()
e <- extent( -180, 180, -90, 90) 
r<-raster::crop(x, e)
r <- disaggregate(r, fact=2)
vals <- 1:ncell(r)
r <- setValues(r, vals)

df.r <- as.data.frame(r, xy=TRUE)
colnames(df.r)<- c("x","y","id")

est <- read.csv("Estimators.CSV", header=T, sep=";")
est$Latitude <- gsub(est$Latitude,pattern = ',',replacement = '.')
est$Longitude <- gsub(est$Longitude,pattern = ',',replacement = '.')
est$Completeness <- gsub(est$Completeness,pattern = ',',replacement = '.')

comp <- est %>% dplyr::select(Longitude, Latitude, Completeness) %>% drop_na() ### drop_na() solo per plots
comp$Longitude <-as.numeric(comp[,1])
comp$Latitude <-as.numeric(comp[,2])
comp$Completeness <-as.numeric(comp[,3])

coordinates(comp)= ~Longitude+Latitude

rst <- raster(ext = extent(c(-180, 180, -90, 90)), crs = crs(r), res = 0.5)
compr <- rasterize(comp, rst, fun=mean)

median_dist <- readRDS("density2.rds")
pop05 <- readRDS("pop05.rds")

rough <- raster("roughness_50KMmd_GMTEDmd.tif")
rough <- projectRaster(rough, median_dist)


nNat2 <- nNat2@data %>% inner_join(., nPlot, by="id") %>% mutate(rIN = countIN/nPlot) %>% dplyr::select(id, rIN) %>% unique()

NAT_nPlot <- nNat2 %>% inner_join(., nPlot, by="id")


cells <- NAT_nPlot$id
ctr <- as.data.frame(xyFromCell(r, cells))
coordinates(ctr)= ~x+y
crs(ctr)=crs(pop05)
crs(ctr)=crs(median_dist)
crs(ctr)=crs(compr)
crs(ctr)=crs(rough)

Vpop05 <- raster::extract(pop05, ctr)
Vdis <- raster::extract(median_dist,ctr)
Vcompr <- raster::extract(compr,ctr)
Vrough <- raster::extract(rough,ctr)

####  GAM Completeness ####
NAT_DIS_PLOT_POP_COMP_ROU <- cbind(NAT_nPlot, pop=Vpop05, dis=Vdis, comp=Vcompr, rough=Vrough) %>% drop_na()
NAT_DIS_PLOT_POP_COMP_ROU <- NAT_DIS_PLOT_POP_COMP_ROU[,-6]


scaled_data <- NAT_DIS_PLOT_POP_COMP_ROU %>%
  mutate(across(everything(), scale)) %>%
  mutate(across(everything(), function(x) (x - min(x)) / (max(x) - min(x))))

colnames(scaled_data) <- c("id","rIN","nPlot","pop","dis","comp","rough")
scaled_data <- scaled_data  %>% relocate("comp", .before = "id")
scaled_data <- scaled_data[,-2]
COMP <- 1
pred_cols <- 2:6

names(scaled_data)[COMP]
names(scaled_data)[pred_cols]

cor_matrix <- cor(scaled_data[pred_cols])

form_gamCOMP <- as.formula(paste0(names(scaled_data)[COMP], "~", paste0("s(", names(scaled_data)[pred_cols], ")", collapse = "+")))
ModelCOMP <- gam(form_gamCOMP, data = scaled_data)
summary(ModelCOMP) #guardo F e p value related


#library(car)
#vif <- vif(ModelCOMP)

#model <- glm(comp ~ rIN+nPlot+pop+dis+rough, data = scaled_data)
#coefficients <- coef(model)
#library(car)
#vif <- vif(model)

####  GAM NNI ####

NNI <- NNI.NNI_SES %>% dplyr::select(id, nni)
NAT_DIS_PLOT_POP_NNI_ROU <- cbind(NAT_nPlot, pop=Vpop05, dis=Vdis, rough=Vrough) %>% inner_join(., NNI, by="id") %>% drop_na()
NAT_DIS_PLOT_POP_NNI_ROU <- NAT_DIS_PLOT_POP_NNI_ROU[,-1]


scaled_data <- NAT_DIS_PLOT_POP_NNI_ROU %>%
  mutate(across(everything(), scale)) %>%
  mutate(across(everything(), function(x) (x - min(x)) / (max(x) - min(x))))

colnames(scaled_data) <- c("rIN","nPlot","pop","dis","rough","nni")
scaled_data <- scaled_data  %>% relocate("nni", .before = "rIN")

NNI <- 1
pred_cols <- 2:6

names(scaled_data)[NNI]
names(scaled_data)[pred_cols]

form_gamNNI <- as.formula(paste0(names(scaled_data)[NNI], "~", paste0("s(", names(scaled_data)[pred_cols], ")", collapse = "+")))
ModelNNI <- gam(form_gamNNI, data = scaled_data)
summary(ModelNNI) #guardo F e p value related

####  GAM Evenness ####

df <- df %>% dplyr::select(id, J)
NAT_DIS_PLOT_POP_EV_ROU <- cbind(NAT_nPlot, pop=Vpop05, dis=Vdis, rough=Vrough) %>% inner_join(.,df, by="id") %>% drop_na()
NAT_DIS_PLOT_POP_EV_ROU <- NAT_DIS_PLOT_POP_EV_ROU[,-1]


scaled_data <- NAT_DIS_PLOT_POP_EV_ROU %>%
  mutate(across(everything(), scale)) %>%
  mutate(across(everything(), function(x) (x - min(x)) / (max(x) - min(x))))

colnames(scaled_data) <- c("rIN","nPlot","pop","dis","rough","J")
scaled_data <- scaled_data  %>% relocate("J", .before = "rIN")

EV <- 1
pred_cols <- 2:6

names(scaled_data)[EV]
names(scaled_data)[pred_cols]

form_gamEV <- as.formula(paste0(names(scaled_data)[EV], "~", paste0("s(", names(scaled_data)[pred_cols], ")", collapse = "+")))
ModelEV <- gam(form_gamEV, data = scaled_data)
summary(ModelEV) #guardo F e p value related


################ RISULTATI #####################


Formula:
comp ~ s(rIN) + s(nPlot) + s(pop) + s(dis) + s(rough)

Parametric coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 0.415929   0.006981   59.58   <2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Approximate significance of smooth terms:
           edf Ref.df      F p-value    
s(rIN)   4.570  5.552  3.228 0.00498 ** 
s(nPlot) 6.547  7.643 59.987 < 2e-16 ***
s(pop)   1.000  1.000  0.517 0.47239    
s(dis)   7.602  8.510  1.869 0.09751 .  
s(rough) 2.364  2.926  2.804 0.03550 *  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

R-sq.(adj) =  0.554   Deviance explained = 57.6%
GCV = 0.023215  Scale est. = 0.022029  n = 452
> cor_matrix <- cor(scaled_data[pred_cols])
> cor_matrix
              rIN       nPlot         pop          dis        rough
rIN    1.00000000 -0.07908232 -0.04320145 -0.068901307 -0.011835176
nPlot -0.07908232  1.00000000  0.03926546  0.092798767  0.138622827
pop   -0.04320145  0.03926546  1.00000000  0.563492034 -0.185948357
dis   -0.06890131  0.09279877  0.56349203  1.000000000  0.004308579
rough -0.01183518  0.13862283 -0.18594836  0.004308579  1.000000000


Formula:
nni ~ s(rIN) + s(nPlot) + s(pop) + s(dis) + s(rough)

Parametric coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 0.297762   0.009842   30.25   <2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Approximate significance of smooth terms:
           edf Ref.df      F  p-value    
s(rIN)   1.558  1.912 14.617 1.78e-06 ***
s(nPlot) 3.031  3.740  3.816  0.00599 ** 
s(pop)   1.949  2.430  1.270  0.22772    
s(dis)   1.414  1.719  0.936  0.27066    
s(rough) 1.000  1.000  0.063  0.80157    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

R-sq.(adj) =  0.116   Deviance explained = 13.5%
GCV = 0.040898  Scale est. = 0.03991   n = 412

Formula:
J ~ s(rIN) + s(nPlot) + s(pop) + s(dis) + s(rough)

Parametric coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  0.47672    0.01324      36   <2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Approximate significance of smooth terms:
           edf Ref.df     F p-value    
s(rIN)   3.559  4.372 9.939 < 2e-16 ***
s(nPlot) 4.664  5.676 2.609 0.02176 *  
s(pop)   1.000  1.000 0.205 0.65100    
s(dis)   7.760  8.607 2.712 0.00806 ** 
s(rough) 1.910  2.373 2.661 0.05798 .  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

R-sq.(adj) =  0.137   Deviance explained = 17.1%
GCV = 0.089207  Scale est. = 0.08557   n = 488
