library(ggplot2)
library(spatialEco)
library(viridis)
library(tidyverse)
library(raster)
library(sf)

d <- readRDS("d.rds")

x <- raster()
e <- extent( -180, 180, -90, 90) 
r<-raster::crop(x, e)
r <- disaggregate(r, fact=2)
vals <- 1:ncell(r)
r <- setValues(r, vals)

df.r <- as.data.frame(r, xy=TRUE)
colnames(df.r)<- c("x","y","id")

## Number of plots ##

nPlot <- d %>% dplyr::select(id, PlotObservationID)%>% unique()%>% group_by(id) %>%
 mutate(nPlot = n()) %>%
  ungroup()



nPlot <- nPlot %>% inner_join(., df.r, by="id") %>% dplyr::select(id, nPlot) %>% unique()

## NNI ##

y4 <- d%>% 
  dplyr::select(Longitude, Latitude, id)%>%
  unique()%>%
  group_by(id)%>%
  nest()

# Function for calulating nearest neighbor index per grid

NNI <- function(inputData=NULL){
  
  coordinates(inputData) = ~ Longitude+Latitude 
  inputData <- inputData %>% st_as_sf()
  nni <- nni(inputData, win="extent")
  
  
  return(nni)
}

map(y4$data, ~ NNI(.x))
y5 <- .Last.value


NNI <- unlist(map(y5[1:1122], "NNI"))

dfNNI <- NNI %>%
  as.data.frame()
#rownames_to_column(var="id")
colnames(dfNNI) <- "NNI"
dfNNI <- dfNNI%>%
  mutate(range=cut(NNI, c(0,1,Inf), include.lowest=TRUE, labels=FALSE))


d_id <- d %>% dplyr::select(id) %>% unique()

dfNNI <- cbind(dfNNI, id=d_id)
dfNNI <- dfNNI[!is.infinite(rowSums(dfNNI)),] # inf values removed which represent grid with 1 plot
d_NNI <- d %>% inner_join(., dfNNI, by="id") %>% dplyr::select(id, NNI) %>% filter(NNI <1) %>% unique()

nPlot <- nPlot %>% inner_join(., df.r, by="id")

coordinates(nPlot)= ~x+y

rst <- raster(ext = extent(c(-180, 180, -90, 90)), crs = crs(r), res = 0.5)
nPlotr <- rasterize(nPlot, rst)


world <- ne_countries(scale = "medium", returnclass = "sf")

nPlotr_sp <- as(nPlotr,'SpatialPolygonsDataFrame')
nPlotr_sp %>% 
  st_as_sf () %>%  
  ggplot()+
  geom_sf(aes(fill =log10(nPlot)))+
  geom_sf(data=world,
          colour = "black", fill = "transparent")+
  scale_fill_viridis(option='viridis',direction = 1,alpha = 0.7)+
  coord_sf(xlim = c(-20, 51), ylim = c(30, 71), expand = TRUE)+
  labs(title = "Number of plots", x="Longitude", y="Latitude", fill = "log10 Plots") +theme_light()+
  theme(legend.background=element_blank(),
        panel.grid = element_blank(),
        legend.position = 'bottom',
        plot.title = element_text(size=12,face = 'bold',hjust = 0.5),
        legend.title=element_text(size=12,face = 'bold'),
        axis.title.x = element_text(size=12,face = 'bold'),
        axis.text.x = element_text(size = 10, face = 'bold'),
        axis.title.y = element_text(size=12,face = 'bold'),
        axis.text.y = element_text(size = 10, face = 'bold'),
        axis.ticks.y=element_blank(),
        text = element_text(size=12), 
        strip.text = element_text(size=12),
        legend.text = element_text(size=12,angle = 0), 
        legend.key.size = unit(0.8, 'cm'))   ->plot

plot1 <- plot + geom_point(data = d_NNI, aes(x = x, y = y, color = NNI),color =" red", size=0.7)
