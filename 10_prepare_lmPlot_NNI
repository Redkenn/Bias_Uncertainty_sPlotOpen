library(ggplot2)
library(spatialEco)
library(viridis)
library(tidyverse)
library(raster)
library(sf)

d <- readRDS("d.rds")

x <- raster()
e <- extent( -180, 180, -90, 90) 
r<-raster::crop(x, e)
r <- disaggregate(r, fact=2)
vals <- 1:ncell(r)
r <- setValues(r, vals)

df.r <- as.data.frame(r, xy=TRUE)
colnames(df.r)<- c("x","y","id")

## Number of plots ##

nPlot <- d %>% dplyr::select(id, PlotObservationID)%>% unique()%>% group_by(id) %>%
 mutate(nPlot = n()) %>%
  ungroup()



nPlot <- nPlot %>% inner_join(., df.r, by="id") %>% dplyr::select(id, nPlot) %>% unique()

## NNI ##

y4 <- d%>% 
  dplyr::select(Longitude, Latitude, id)%>%
  unique()%>%
  group_by(id)%>%
  nest()

# Function for calulating nearest neighbor index per grid

NNI <- function(inputData=NULL){
  
  coordinates(inputData) = ~ Longitude+Latitude 
  inputData <- inputData %>% st_as_sf()
  nni <- nni(inputData, win="extent")
  
  
  return(nni)
}

map(y4$data, ~ NNI(.x))
y5 <- .Last.value


NNI <- unlist(map(y5[1:1122], "NNI"))

dfNNI <- NNI %>%
  as.data.frame()
#rownames_to_column(var="id")
colnames(dfNNI) <- "NNI"
dfNNI <- dfNNI%>%
  mutate(range=cut(NNI, c(0,1,Inf), include.lowest=TRUE, labels=FALSE))


d_id <- d %>% dplyr::select(id) %>% unique()

dfNNI <- cbind(dfNNI, id=d_id)
dfNNI <- dfNNI[!is.infinite(rowSums(dfNNI)),] # inf values removed which represent grid with 1 plot
d_NNI <- d %>% inner_join(., dfNNI, by="id") %>% dplyr::select(id, NNI)  %>% unique()

NNI_nPlot <- d_NNI %>% inner_join(., nPlot, by="id") 

scatter_plot <- ggplot(NNI_nPlot, aes(x = nPlot, y = NNI)) +
  geom_point() +
  labs(x = "Number of plots", y = "NNI") +
  theme_minimal()

linear_regression <- scatter_plot + geom_smooth(method = "lm", se = FALSE)

